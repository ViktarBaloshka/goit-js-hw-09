{"mappings":"iiBAQA,IAAAA,EAAAC,EAAA,SACMC,EAAO,CACXC,MAAOC,SAASC,cAAc,qBAC9BC,KAAMF,SAASC,cAAc,oBAC7BE,OAAQH,SAASC,cAAc,sBAC/BG,KAAMJ,SAASC,cAAc,SAe/B,SAASI,EAAcC,EAAUP,GAC/B,IAAMQ,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACLN,EACFI,EAAQ,CAAEL,SAAUA,EAAUP,MAAOA,IAErCa,EAAO,CAAEN,SAAUA,EAAUP,MAAOA,G,GAErCA,E,IArBPD,EAAKM,KAAOU,iBAAiB,UAE7B,SAAsBC,GACpBA,EAAIC,iBAqBN,SAAqBC,GACnB,I,IADqBd,EAAFc,EAAEd,OAAQD,EAAVe,EAAUf,KAAMgB,EAAhBD,EAAgBlB,MAC1BoB,EAAQ,EAAGA,GAAShB,EAAQgB,GAAS,EAC5Cd,EAAcc,EAAOD,GAClBE,MAAK,SAAAC,G,IAAGf,EAAQe,EAARf,SAAUP,EAAKsB,EAALtB,MACjBuB,EAAA1B,GAAS2B,OAAOC,QACd,uBAAwCC,OAAfnB,EAAS,QAAYmB,OAAN1B,EAAM,M,IAGjD2B,OAAM,SAAAL,G,IAAGf,EAAQe,EAARf,SAAUP,EAAKsB,EAALtB,MAClBuB,EAAA1B,GAAS2B,OAAOI,QACd,sBAAqCF,OAAfnB,EAAS,QAAYmB,OAAN1B,EAAM,M,IAGjDmB,GAAShB,C,CA5BX0B,CALa,CACXzB,OAAQ0B,SAAS/B,EAAKK,OAAO2B,OAC7B5B,KAAM2B,SAAS/B,EAAKI,KAAK4B,OACzB/B,MAAO8B,SAAS/B,EAAKC,MAAM+B,Q","sources":["src/js/03-promises.js"],"sourcesContent":["// Напиши скрипт, который при сабмите формы вызывает функцию createPromise(position, delay) столько раз,\n// сколько ввели в поле amount.При каждом вызове передай ей номер создаваемого промиса(position)\n// и задержку учитывая введенную пользователем первую задержку(delay) и шаг(step).\n// Дополни код функции createPromise так, чтобы она возвращала один промис, который выполянется или\n// отклоняется через delay времени.Значением промиса должен быть объект, в котором будут свойства\n// position и delay со значениями одноименных параметров.Используй начальный код функции для выбора того,\n// что нужно сделать с промисом - выполнить или отклонить.\n\nimport Notiflix from 'notiflix';\nconst refs = {\n  delay: document.querySelector('input[name=delay]'),\n  step: document.querySelector('input[name=step]'),\n  amount: document.querySelector('input[name=amount]'),\n  form: document.querySelector('form'),\n};\n\nrefs.form = addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit(evt) {\n  evt.preventDefault();\n  const data = {\n    amount: parseInt(refs.amount.value),\n    step: parseInt(refs.step.value),\n    delay: parseInt(refs.delay.value),\n  };\n  callPromise(data);\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position: position, delay: delay });\n      } else {\n        reject({ position: position, delay: delay });\n      }\n    }, delay);\n  });\n}\nfunction callPromise({ amount, step, delay }) {\n  for (let index = 1; index <= amount; index += 1) {\n    createPromise(index, delay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n    delay += step;\n  }\n}\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$refs","delay","document","querySelector","step","amount","form","$ce04d3a99e08e73b$var$createPromise","position","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","addEventListener","evt","preventDefault","param1","delay1","index","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure","$ce04d3a99e08e73b$var$callPromise","parseInt","value"],"version":3,"file":"03-promises.a403a779.js.map"}